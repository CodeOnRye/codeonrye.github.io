[{"content":"","date":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog"},{"content":" A scalable site. Introduction # Info: This is not a full step by step guide, but one that can be used in combination with the standard guides available! Also I plan to update this after some time, so it will get better. ðŸ™ˆ For those curious this guide is how I got this site up and running using a combination of Github, as the deployment automation and hosting of the site, and Hugo, a static website generator tool, using the Congo theme. This is all better documented on all the referenced sites, but this might help with bridging any gaps, or maybe provide a more concentrated interpretation of the above guides.\nThe assumptions are that you know your way around the terminal and know how to use tools like git, brew (for macs) and modify your domain\u0026rsquo;s DNS.\nAll references can be found at the following sites:\nhttps://gohugo.io/getting-started/quick-start/ - Hugo quickstart guide. I would start here if you have no idea what is going on. https://jpanther.github.io/congo/docs/installation/ - An end to end guide from the theme\u0026rsquo;s creator. Really this should cover most everything. https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages - Important information using GitHub Pages (which is what we will be doing) https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site - Important information on DNS for your domain to point it to GitHub Pages. https://github.com/CodeOnRye/codeonrye.github.io - Lastly, here is all the code running this site, so you could always start from there!\nSchema #First let\u0026rsquo;s lay out all the pieces to best understand how this will work.\ngraph TD A[Repository Markdown Files] --\u003e|Git Commit| B(GitHub) B --\u003e C{GitHub Actions} C --\u003e|Watches Main Branch| B C --\u003e F(Runs Hugo) F --\u003e|Processes MD to HTML| G(Pushed to gh_pages Branch) D[Domain Registrar] --\u003e|A Record| E(github.io) G --\u003e B E --\u003e G subgraph Local A end subgraph GitHub B C F G end subgraph DNS D E end As shown, wherever you may be sourcing your markdown files, once they are pushed to GitHub then the magic starts happening. A GitHub Action will run on commits, running a hugo service to generate the html files and pushing them back to a specific branch, gh_pages. This branch is configured in the repository to be the source for the github site. On the other end, the DNS registrar has an A Record set so that it redirects to the GitHub Provided site. Once it is all set up, then all you need to do is update your Hugo files and push!\nGitHub #You should start by setting up your GitHub repository and various settings as needed. This will help prepare for the automations and configurations later.\nCreate Your Repo #One thing that got me, was that since we want to point to use the GitHub Pages functionality, we have to name the repository YOURUSERNAME.github.io. There may be another way to do this, but this is what I did.\nOnce created, go ahead and clone it down to your local environment.\ngit clone git@github.com:YOURUSERNAME/YOURUSERNAME.github.io.git Hugo #First things first. You need to get Hugo up and running and become familiar enough with it. Use the linked guide above to just try setting up a quick one locally. Once you get a feel comfortable with how it works with markdown files, then we can initialize it in the repository file we created in previous step.\ncd /PATH/TO/YOURUSERNAME.github.io hugo new site ./ Congo Theme #Next we will install and set up the theme. As all themes are different, this may not apply to others, so take that with a grain of salt if you are deviating here.\nWe need to first pull down the theme, to do this we will use the git submodule function. This keeps our tooling from becoming more complex.\ncd /PATH/TO/YOURUSERNAME.github.io git init git submodule add -b stable https://github.com/jpanther/congo.git themes/congo Next we will need to configure Hugo to use this Theme. The theme\u0026rsquo;s guide is best to follow, as it will be more up-to-date. But to boil it down you need to copy the /PATH/TO/YOURUSERNAME.github.io/theme/congo/config/_default folder to /PATH/TO/YOURUSERNAME.github.io/. Now we customize the files as needed.\nconfig.toml - Your main config file for Hugo where you set your website name, theme (congo) and other settings languages.en.toml - Sets your defaults for the site when set in the en language. markup.toml - Used for the theme, I have not touched this. menus.en.toml - Like languages.en.toml, this is the configuration for the menus when set to the en language. module.toml - Used for the theme, I have not touched this. params.toml - Allows you to further configure the theme. Making a Post #With this theme, I\u0026rsquo;ve decided to set up my posts within their own folders, rather than all under the ./content/ folder. This seems to work best for this theme. So a post will look roughly like this\ncontent/posts/building-my-site â”œâ”€â”€ img â”‚ â”œâ”€â”€ gh_actions_permissions.png â”‚ â”œâ”€â”€ gh_pages_config.png â”‚ â””â”€â”€ gh_workflow_permissions.png â””â”€â”€ index.md Notice that the markdown file is named index.md and not the name of the post, that is reserved for the folder name. More examples can be found here\nGitHub Actions #Lastly, once you have a nice site configured, and you\u0026rsquo;ve tested it out locally with the hugo server -D we can start working on getting the automations going to publish this online.\nGitHub Actions Workflow File #You can leverage the default one provided by the theme here. This should work out of the box for you. Once you add it to your /PATH/TO/YOURUSERNAME.github.io/.github/workflows/ folder and push it to GitHub you will need to verify it runs successfully.\nOn GitHub you can navigate to your repository, and then the Actions Page to verify if it is running properly. If not you will want to check the follow settings.\nGitHub Repository Settings #Make sure your settings are as follows:\nThose should fix it to allow the actions to properly run. Once they do you will now have a gh_pages branch that mirror\u0026rsquo;s the contents of the public folder that Hugo generates when running the hugo commands.\nDNS #Last but not least, we will now make the site available online! First we finish configuring GitHub, test and then point our domain to it.\nGitHub Pages #Under the repository\u0026rsquo;s settings for Pages you will want to configure it as follows\nA few things to note, you can only enable SSL enforcement once your custom domain is configured (next step). But this will be fine for now to test. You should now be able to got to YOURUSERNAME.github.io and see your site! If you do then finish configurations on your domain registrar.\nDomain DNS #Per the details from GitHub you will want to add the follow records to your Domain\u0026rsquo;s DNS provider.\nA Record\n185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 AAAA Record\n2606:50c0:8000::153 2606:50c0:8001::153 2606:50c0:8002::153 2606:50c0:8003::153 I would avoid using the Alias, as that would block you from using DNSSEC.\nAt this point you should now be able to go to yourdomain.com and load your github site. If needed, go back to your settings and enable SSL.\nConclusion #This rough guide is how I have mine set up with tips on how you can do it yourself. Again, it isn\u0026rsquo;t meant to be an end-to-end guide. But over time I will probably update this guide to better clarify or expand items.\n","date":"18 March 2024","permalink":"/posts/building-my-site/","section":"Posts","summary":"A scalable site.","title":"Building My Site"},{"content":"","date":null,"permalink":"/tags/guide/","section":"Tags","summary":"","title":"Guide"},{"content":"","date":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":" Posts. Blogs. Ramblings. ðŸ’­ ","date":null,"permalink":"/posts/","section":"Posts","summary":"Posts.","title":"Posts"},{"content":" My small internet potagerie ðŸŒ± This site is a place for me to cultivate and share.\nPlease enjoy your stay.\n","date":null,"permalink":"/","section":"Ryan P. Meyer","summary":"My small internet potagerie ðŸŒ± This site is a place for me to cultivate and share.","title":"Ryan P. Meyer"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/tags/website/","section":"Tags","summary":"","title":"Website"},{"content":" Hello World. Introduction #The classic initialization of any project always ends up beginning with those words. I\u0026rsquo;ve decided to take another shot at curating a digital space for myself. In the past I have tried to create websites using various frameworks and tools, but they always became more work than I felt they were worth. Looking back, I\u0026rsquo;ve always tried to create something more complex than I needed. Hoping to grow into it, rather than grow with it. But I really hadn\u0026rsquo;t hammered out the foundation of what I actually needed, and focused on what I wanted. Taking a step back I wanted to focus on what I needed from this projected. With hopes that the choices will be flexible enough to not require a lot of work to expand later or maintain.\nThose needs have boiled down to the following.\nDefining My Goals #In short, answering this was the hardest part. Simply \u0026ldquo;a website\u0026rdquo; is too broad of an answer; I needed to really think about what content I wanted, how I wanted to present it, how it should be maintained and what I wanted to get out of my time with the project. So lets start with defining the content.\nThe content will be my own musings, or ramblings for some. I don\u0026rsquo;t want to lock myself into a certain type of topic or subject matter. So a semi-professional blog and portfolio I think will strike a balance. That means the site must be able to provide an easy way for me to both create that content and present it.\nPresentation of the website should be clean and modern. Next I need to be able to customize it once I start having a more fully formed idea of the content. So again, it needs to be a flexible solution that can be changed without much headache.\nAnd headaches is what I have gotten in the past with frameworks like wordpress or other blog focused solutions. They did so much more than I needed at the time, that I would get stuck in the weeds. I\u0026rsquo;d enable features I didn\u0026rsquo;t need, or maybe even fully understand. This solution needed to be simple, but extendable when I needed it to be.\nLastly, in the end what I want out of this project is a website I can call my own. A place that is easy for me to keep up to date both on content and patches. It had to work for me, rather than me work for it. Which has lead me to go with this set up.\nThe Project #This project is created with as minimal tools as possible; Hugo as the website generator and will be served by GitHub.\nHugo - This is the website framework tooling solution, a static website generator Github/Gitlab Pages Hosted - Since I am setting up a static website, that means no backends - and not servers - needed! So why not use Github or GitLab\u0026rsquo;s pages and actions to handle the hosting and publishing? Openness #I am always a big fan of Free and Open Source Software, FOSS for short. So where I can, I try my best to leverage systems and tools for that. Granted there comes a time where, well, time isn\u0026rsquo;t as available. Its the well-known adage of FOSS not being free in the cost of time. However, if the system is simple enough and the data portable enough, then it might very well be worth that time and effort to setup and maintain.\nThe Framework #Needing the site to be maintainable, is key to keeping the project, and thus the site, up and running. So, where I could, I would remove systems that needed my attention to work or stay in good working order. Too many website frameworks required lots of backends, databases and the like, as well as had features I simply didn\u0026rsquo;t care for. I just needed something that was dead simple to set up, run and update with new content when I felt like it.\nThe Platform #In the past I have always set up servers, installed the needed services and then install any applications to get a website up and running. But each of those items introduces complexity and friction. I need to make sure the services are up to date. The database needs to be backed up properly. How do I migrate to a new server if needed, and so on. With the static aspect of Hugo I can avoid this because, in the end, the website is just a bunch of files. And those files are already backed up in Github which is also \u0026ldquo;publishing them.\u0026rdquo; Overall reducing complexity to make it easier to maintain and use, which is exactly what I want.\nTL;DR #In short, I have set up a Hugo based static website that I can use Github Pages and Actions to host and manage! I will probably also post a guide incase someone wants to try themselves!\n","date":"25 January 2024","permalink":"/posts/hello-world/","section":"Posts","summary":"Hello World.","title":"Hello World"},{"content":"About Me #Hey! Welcome to my space in the digital world. I am a technology enthusiast with a focus on cybersecurity. This website is my creative outlet, a project that blends my technical expertise with my love for innovation and expression.\nMy journey has always been fueled by a desire to create, be it through technological or creative endeavors. This site serves as a middle ground, allowing me to explore and refine my writing skills while managing a platform for visitors to engage and explore.\nHere, you can expect to find a diverse array of content. While I have yet to chart a definitive course for this website, my aim is to cover a range of topics. You\u0026rsquo;ll likely encounter insights on the latest trends in cybersecurity, updates on projects I\u0026rsquo;m involved in, or even reflections on books that have impacted my thinking.\nIf you\u0026rsquo;re interested in connecting or discussing any of the content, please don\u0026rsquo;t hesitate to reach out through my contact links. Enjoy your stay!\n","date":null,"permalink":"/about/","section":"Ryan P. Meyer","summary":"About Me #Hey!","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]